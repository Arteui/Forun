const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(express.json());

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB Atlas
const MONGO_URI = process.env.MONGO_URI || "mongodb+srv://tema333345:qwerty123@cluster0.gz8dh.mongodb.net/comments?retryWrites=true&w=majority&appName=Cluster0";
mongoose.connect(MONGO_URI)
  .then(() => console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB'))
  .catch(err => console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err));

// –ú–æ–¥–µ–ª—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
const Comment = mongoose.model('Comment', new mongoose.Schema({
  text: String,
  children: Array
}), 'comm');  // <-- –£–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é

// üìå –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON, –∞ –Ω–µ HTML
app.get('/', async (req, res) => {
  try {
    const comments = await Comment.find({});
    res.json(comments);  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON, –∞ –Ω–µ HTML
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// ‚ö†Ô∏è –î–æ–±–∞–≤—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ 404 HTML)
app.use((req, res) => {
  res.status(404).json({ message: '–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));




app.get('/', async (req, res) => {
  try {
    console.log('–ó–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
    const comments = await Comment.find({});
    console.log('–î–∞–Ω–Ω—ã–µ –∏–∑ MongoDB:', comments); // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    if (comments.length === 0) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ');
    }
    res.json(comments);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});
